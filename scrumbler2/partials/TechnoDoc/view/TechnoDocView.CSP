<script language="Cache" runat="Server">
    s task= %request.Get("task",0)
    
    if (##class(Scrumbler.Task).%ExistsId(task))
    {
	   s TagsResult=##class(%Library.ResultSet).%New("Scrumbler.Logic.Tags:GetTags")
	   d TagsResult.Execute(task)
	   &html<<div class="row"><div class="col-lg-12"><ul>>
	   while TagsResult.Next() {
		    &html<<li class="li-inline"><label class="label label-info">>
					w TagsResult.Get("text")
            &html<</label>
                    </li>>
		}
			&html<</ul><hr></div></div>>
			&html<<div class="row">>
			
			s TechnoDocs=##class(%Library.ResultSet).%New("Scrumbler.Logic.TechnoDoc:GetTechnoDocsByTaskID")
			d TechnoDocs.Execute(task)
			while TechnoDocs.Next(){
				s AnnotationsResult=##class(%Library.ResultSet).%New("Scrumbler.TechnoDoc.Annotation:GetAnnotationsByTechnoDocID")
				d AnnotationsResult.Execute(TechnoDocs.Get("ID"))
				while AnnotationsResult.Next(){
					w AnnotationsResult.Get("Body")
					}
			}
			&html<<hr>>
			&html<        <div class="panel panel-default" ng-init="ViewTargets=1;">
            <div class="panel-heading">
                <button class="btn btn-default btn-sm" ng-click="ViewTargets=!ViewTargets; ">
                    <span class="{{ViewTargets | ViewTargetList}}"></span>
                </button>
                <strong>
                    Targets
                </strong>

            </div>
            <div class="panel-body" ng-if="ViewTargets">>
            &html<<ol>>
            s TechnoDocs=##class(%Library.ResultSet).%New("Scrumbler.Logic.TechnoDoc:GetTechnoDocsByTaskID")
			d TechnoDocs.Execute(task)
			s TargetArray=##class(%ListOfDataTypes).%New()
			s AnswerTargetArray=##class(%ListOfDataTypes).%New()
			while TechnoDocs.Next(){
				s TargetsResult=##class(%Library.ResultSet).%New("Scrumbler.TechnoDoc.Target:GetTargetsByTechnoDocID")
				d TargetsResult.Execute(TechnoDocs.Get("ID"))
				while TargetsResult.Next(){
					if TargetsResult.Get("Type")=0{do TargetArray.Insert(TargetsResult.Get("Target"))}
					else {do AnswerTargetArray.Insert(TargetsResult.Get("Target"))}
					}
			}
			&html<<style>
			ul.arrow {
    			list-style-type: none;
			}

			</style>>
			for i=1:1:TargetArray.Size{
					&html<<li><strong>#(TargetArray.GetAt(i))#</strong>>
					if (AnswerTargetArray.GetAt(i)'=""){
						&html<<ul class="arrow">>
     					&html<<li>#(AnswerTargetArray.GetAt(i))#</li>>
						&html<</ul>>
					}
					&html<</li>>	
			}
			&html<</ol></div></div>>
			&html<<div class="panel panel-default" ng-init="ViewSources=1;">
            <div class="panel-heading">
                <button class="btn btn-default btn-sm" ng-click="ViewSources=!ViewSources; ">
                    <span class="{{ViewSources | ViewTargetList}}"></span>
                </button>
                <strong>
                    Resources
                </strong>
            </div>
            <div class="panel-body" ng-if="ViewSources">
                <ul >>
            s TechnoDocs=##class(%Library.ResultSet).%New("Scrumbler.Logic.TechnoDoc:GetTechnoDocsByTaskID")
			d TechnoDocs.Execute(task)
			while TechnoDocs.Next(){
				s SourceResult=##class(%Library.ResultSet).%New("Scrumbler.TechnoDoc.Source:GetSourcesByTechnoDocID")
				d SourceResult.Execute(TechnoDocs.Get("ID"))
				while SourceResult.Next(){
					&html<<li>>
					&html<<a target="_blank" href="#(SourceResult.Get("URL"))#">
                            #(SourceResult.Get("Title"))#
                        </a>>
					 
					&html<</li>>
					}
			}
			&html<</ul></div></div>>
			&html<<div>>
			s TechnoDocs=##class(%Library.ResultSet).%New("Scrumbler.Logic.TechnoDoc:GetTechnoDocsByTaskID")
			d TechnoDocs.Execute(task)
			while TechnoDocs.Next(){
				s SourceTextResult=##class(%Library.ResultSet).%New("Scrumbler.TechnoDoc.SourceText:GetSourceTextsByTechnoDo—ÅID")
				d SourceTextResult.Execute(TechnoDocs.Get("ID"))
				while SourceTextResult.Next(){
					
					&html<<div ng-init="ViewSourceText=1;">
                <div class="panel panel-default">
                    <div class="panel-heading">
                        <button class="btn btn-default btn-sm" ng-click="ViewSourceText=!ViewSourceText; ">
                            <span class="{{ViewSourceText | ViewTargetList}}"></span>
                        </button>
                        <strong>
                            SourceText - #(SourceTextResult.Get("Title"))#
                        </strong>
                    </div>
                    <div class="panel-body" ng-if="ViewSourceText">
                        <div class="row">
                            <div class="col-lg-12">
                                #(SourceTextResult.Get("Description"))#
                                
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-lg-12" ng-init="SourceText='#($REPLACE($REPLACE(SourceTextResult.Get("Body"),"'","\'"),"""","\u0022"))#'">
                                <div ui-ace="{  useWrapMode : true,
                                         showGutter: false,
                                         theme:'twilight',
                                         mode: '#(SourceTextResult.Get("Language"))#'
                                        }" readonly="true" ng-model="SourceText"></div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>>

					}
			}
			&html<</div><hr>>
			
			
			
			s Comments=##class(%Library.ResultSet).%New("Scrumbler.Logic.Comment:GetCommentByTask")
			d Comments.Execute(task,##class(WEB.Auth).GetCurrentUser())
			while Comments.Next(){
			&html<<div class="">
            <div class="row">
                <div class="col-lg-2">
                    <div class="row">
                        <div class="col-lg-6">
                            <img style="max-height: 50px" class="img-thumbnail" ng-src="#(Comments.Get("Gravatar"))#">
                        </div>
                        <div class="col-lg-6">
                        #(Comments.Get("FirstName"))#
                        #(Comments.Get("LastName"))#
                        </div>
                    </div>

                </div>
                <div class="col-lg-9">
                    <div class="row">
                        <label class="label label-info">
                            {{Page.Comment.Types[#(Comments.Get("CommentType"))#]}}
                        </label>
                    </div>
                    <div class="row" >
                    #(Comments.Get("CommentBody"))#
                    </div>
                    <div class="row">{{comment.CommentToURL}}</div>
                </div>
                <div class="col-lg-1" ng-show="#(Comments.Get("Edit"))#">
                    <button class="btn btn-default btn-sm" ng-click="UpdateComment(task,#(Comments.Get("ID"))#)"><span class="glyphicon glyphicon-refresh"></span> </button>
                </div>
            </div>
            <hr>
        </div>
        <button class="btn btn-default" type="button" ng-click="CreateCommentForTask(task)">{{Page.Task.CreateComment}}</button>
        >
			}
			
			
			
			&html<</div>>
			
		
		 
	}
</script>
	                     

